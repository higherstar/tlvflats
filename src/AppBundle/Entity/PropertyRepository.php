<?php

namespace AppBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * PropertyRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class PropertyRepository extends EntityRepository
{
    public function findAllWithProperties($visitors = 0, $searchTerm, $place, $dateFrom, $dateTo)
    {
        $q = 'SELECT p, r, pf, f FROM AppBundle:Property p ' .
            'LEFT JOIN p.propertyFeatures pf ' .
            'LEFT JOIN pf.feature f JOIN p.rooms r ' ;
        if(isset($place)) {
            $q.=' LEFT JOIN p.propertyPlaces pp ';
        }

        $q .= ' WHERE r.accomodate >= :visitors ';
        if (isset($searchTerm) && !empty($searchTerm)) {
            $q .= " AND (p.title like :st OR p.shortDescription like :st OR p.longDescription like :st OR p.address like :st) ";
        }
        if(isset($place)) {
            $q.=" AND (pp.place = :place OR p.mainPlace=:place)";
        }
        if(isset($dateFrom) && isset($dateTo)) {
            $q .= " AND r.id not in (select ri.id from AppBundle:Booking b JOIN b.room ri
            WHERE b.firstNight between :dateFrom and :dateTo OR b.lastNight between :dateFrom and :dateTo
            OR :dateFrom between b.firstNight and b.lastNight OR :dateTo between b.firstNight and b.lastNight
            )";
        }
        $query = $this->getEntityManager()->createQuery(
            $q
        )->setParameter("visitors", $visitors);
        if (isset($searchTerm) && !empty($searchTerm)) {
            $query->setParameter("st", '%' . $searchTerm . '%');
        }
        if (isset($place)) {
            $query->setParameter("place", $place);
        }

        if(isset($dateFrom) && isset($dateTo)) {
            $query->setParameter("dateFrom", $dateFrom)->setParameter("dateTo", $dateTo);
        }

        return $query
            ->getResult();
    }

    public function findOneWithProperties($id)
    {
        return $this->getEntityManager()->createQuery(
            'SELECT p, pf, f, i FROM AppBundle:Property p left JOIN p.propertyFeatures pf left JOIN pf.feature f left join p.images i' .
            ' WHERE p.id=:id'
        )->setParameter("id", $id)
            ->getOneOrNullResult();
    }

    public function findPropertiesFor(Owner $owner)
    {
        return $this->getEntityManager()->createQuery(
            'SELECT p FROM AppBundle:Property p' .
            ' WHERE p.owner=:owner'
        )->setParameter("owner", $owner)
            ->getResult();
    }
}
